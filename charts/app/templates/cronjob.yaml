{{- if eq "cronjob" .Values.namespace  }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.name }}
  namespace: {{ printf "sid-%s" .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    env: {{ .Values.environment }}
spec:
  {{- if .suspended }}
  suspend: true
  {{- end }}
  schedule: {{ .Values.schedule | squote }}
  startingDeadlineSeconds: 30
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app: {{ $.Values.name }}
        env: {{ $.Values.environment }}
    spec:
      template:
        metadata:
          labels:
            app: {{ $.Values.name }}
            env: {{ $.Values.environment }}
        spec:
          serviceAccountName: {{ $.Values.name }}
          restartPolicy: Never
          imagePullSecrets:
            - name: regcred
          containers:
          - name: {{ $.Values.name }}
            image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            {{- if .command }}
            command: [{{ .command | quote }}]
            {{- end }}
            {{- if .args }}
            args:
            {{- range .args }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}
            envFrom:
              {{- if .Values.env }}
              {{- if .Values.env.public }}
              - configMapRef:
                  name: {{ $.Values.name }}
              {{- end }}
              {{- if .Values.env.private }}
              - secretRef:
                  name: {{ $.Values.name }}
              {{- end }}
              {{- end }}
            {{- if .Values.resources }}
            resources:
{{ toYaml .Values.resources | indent 14 }}
            {{- end }}
{{- end }}
